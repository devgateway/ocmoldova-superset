#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image ocmoldova/superset:latest
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    profiles:
      - superset

  db:
    env_file: docker/.env-non-dev
    image: postgres:14
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
    ports:
      - 5433:5432
    profiles:
      - superset
      - scraper    


  #pgadmin4:
  #  image: dpage/pgadmin4
  #  container_name: pgadmin4
  #  restart: unless-stopped
  #  ports:
  #    - 8089:80
  #  environment:
  #    - PGADMIN_DEFAULT_EMAIL=domains@developmentgateway.org
  #    - PGADMIN_DEFAULT_PASSWORD=
  #    - SCRIPT_NAME=/pgadmin
  #    - "traefik.frontend.rule=PathPrefix:/pgadmin"
  #  depends_on: *superset-depends-on
  #  profiles:
  #    - superset
  #  volumes:
  #    - /opt/work/pgadmin4/data:/var/lib/pgadmin

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    profiles:
      - superset 
    build:
      target: lean   

  # superset-init:
  #   image: *superset-image
  #   container_name: superset_init
  #   command: ["/app/docker/docker-init.sh"]
  #   env_file: docker/.env-non-dev
  #   depends_on: *superset-depends-on
  #   user: "root"
  #   volumes: *superset-volumes
  #   healthcheck:
  #     disable: true
  #   profiles:
  #     - superset

  ocdsdata:
    image: ocdsdata:${TAG:-latest}
    container_name: ocdsdata
    restart: no
    depends_on:
      - db
    build:
      context: ocdsdata
    working_dir: /app
    profiles:
      - scraper  
    environment:
      - DATABASE_URL=postgresql://superset:superset@superset_db:5432/ocmoldova_scrape
    command: ["python", "ocdsdata.py", "import-scraper", "moldova", "moldova"]     

  superset-embed:
    image: superset-embed:${TAG:-latest}
    container_name: superset_embed
    profiles:
      - superset-embed 
    build:
      target: prod  
      context: superset-embed
      args:
        - STATIC_SUPERSET_URL=${SUPERSET_URL}
    working_dir: /app
    ports:
      - "3000:3000"
      
  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]
    profiles:
      - superset

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    profiles:
      - superset    

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
